{"version":3,"sources":["domain/storage.ts","types/Node.ts","domain/fileTree.ts","api/api.ts","state/actions.ts","state/reducer.ts","state/index.tsx","domain/selection.ts","domain/Drawing.ts","types/Vector2.ts","types/Path.ts","domain/util.ts","domain/TreeRenderer.ts","components/tree/TreePath.tsx","hooks/useHasDarkTheme.ts","hooks/useColors.ts","components/tree/NodeLink.tsx","components/form/RandomOwnerButton.tsx","components/tree/HelpBanner.tsx","components/tree/TreeView.tsx","components/view/PanelBadge.tsx","components/view/CollapsiblePanel.tsx","components/form/FormPanel.tsx","components/form/OwnerDataForm.tsx","components/form/RepoForm.tsx","components/form/BranchForm.tsx","components/tree/NodePanel.tsx","components/tree/TreePanel.tsx","components/view/Sidebar.tsx","components/App.tsx","index.tsx"],"names":["readFromStorage","storage","key","getItem","saveToStorage","value","setItem","Node","path","dirPath","parent","type","size","isLeaf","elements","firstFlag","this","node","length","buildTree","name","files","tree","file","tokens","split","curr","i","token","nextNode","find","n","push","deflattenTree","calculateTreeSizes","reduce","acc","apiUrl","makeHeaders","owner","headers","Authorization","btoa","processResponse","response","fn","a","ok","json","JSON","text","error","parse","Error","message","fetchRepos","url","fetch","map","repo","fetchBranches","branch","commitSha","commit","sha","fetchFiles","filter","truncated","actions","reducer","state","action","collapsed","ownerData","loading","repoData","repos","branchData","branches","treeData","mainNode","hoveredNode","renderer","console","warn","initialState","localStorage","sessionStorage","GitreeContext","React","createContext","Provider","children","useReducer","dispatch","setOwnerFormCollapsed","setOwner","setToken","getRepos","setRepoFormCollapsed","setRepo","getBranches","masterBranch","b","setBranchFormCollapsed","setBranch","setRenderer","setHoveredNode","setMainNode","getUrl","Selection","drawing","callback","clear","pathOver","start","end","isMainPath","elem","drawOutline","tryDisplayText","textLength","measureText","width","x","drawSelectionText","Drawing","ctx","useDarkTheme","colors","minTextSize","textMargin","maxTextScale","rotationClamp","hasDarkTheme","textAlign","textBaseline","from","to","beginPath","moveTo","y","lineTo","stroke","fitText","color","shape","Path2D","fillStyle","rect","fill","strokeStyle","lineWidth","sub","strokeRect","actionDark","fillRect","canvas","clearRect","height","font","maxScale","bounds","rotation","scale","diagonalWidth","Math","min","atan2","PI","pos","lerp","save","translate","rotate","fillText","restore","Vector2","sqrt","other","val","amount","add","mul","Path","TreeRenderer","frontCanvas","linkRef","hoverCallback","currentNodeCallback","selection","currentNode","allPaths","firstLevelPaths","subdivPaths","currentPath","maxLevels","setCurrentNode","selectionDrawing","getContext","e","shiftKey","ctrlKey","paths","getPathOverType","findPathOver","hide","show","preventDefault","draw","canvasSize","drawSegment","zero","startPoint","endPoint","depth","skipSingleDirs","drawNodeText","style","display","drawRectPath","left","top","firstEnd","secondStart","parts","buckets","Array","obj","sort","minBucket","c","cc","partition","ratio","calculatePartsRatio","divPointX","divPointY","drawLine","first","second","fillArea","assert","nativeEvent","offsetX","offsetY","isPointInPath","TreePath","useContext","pathSegments","unshift","createPath","className","onClick","useHasDarkTheme","matchMedia","matches","useColors","window","getComputedStyle","document","documentElement","getPropertyValue","actionLight","NodeLink","_ref","href","target","rel","aria-label","ref","icon","faExternalLinkAlt","owners","margin","padding","RandomOwnerButton","nextOwner","floor","random","faDice","HelpBanner","role","TreeView","isDarkTheme","canvasRef","useRef","frontCanvasRef","useEffect","current","onMouseLeave","hideSelection","click","onMouseMove","mouseMove","PanelBadge","faCheck","faTimes","faHourglass","CollapsiblePanel","props","setCollapsed","title","FormPanel","isOk","OwnerDataForm","form","required","onChange","disabled","RepoForm","hidden","r","BranchForm","NodePanel","showLink","actionColor","faFile","faFolder","filesize","TreePanel","Sidebar","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4def8a60.chunk.js","sourcesContent":["export function readFromStorage(storage: Storage, key: string): string | null {\n    return storage.getItem(key);\n}\n\nexport function saveToStorage(storage: Storage, key: string, value: string) {\n    storage.setItem(key, value);\n}","export type NodeType = 'dir' | 'file' | 'dirs';\n\nexport class Node {\n  path: string;\n  dirPath: string;\n  parent: Node | null;\n  size: number;\n  elements: Node[];\n  isLeaf: boolean;\n  type: NodeType;\n  firstFlag: boolean = false;\n\n  constructor(path: string, dirPath: string, parent: Node | null, type: NodeType, size: number = 0, isLeaf: boolean = false) {\n    this.path = path;\n    this.dirPath = dirPath;\n    this.parent = parent;\n    this.type = type;\n    this.size = size;\n    this.isLeaf = isLeaf;\n    this.elements = [];\n  }\n\n  // return either leaf, or node with more than 1 child\n  skipSingleDirs(): Node {\n      if (this.isLeaf) return this;\n\n      let node: Node = this;\n      while (node.elements.length === 1) {\n          node = node.elements[0];\n      }\n      return node;\n  }\n}\n","import { Node } from '../types/Node';\nimport { GitHubFile } from '../api/ApiTypes';\n\nconst deflattenTree = (name: string, files: GitHubFile[]) => {\n  const tree = new Node(name, '/', null, 'dirs');\n  for (const file of files) {\n    const tokens = file.path.split(\"/\");\n    let curr: Node = tree;\n    let path: string = '/';\n    // build path\n    for (let i = 0; i < tokens.length - 1; i++) {\n      const token = tokens[i];\n      let nextNode = curr.elements.find((n: Node) => n.path === token);\n      if (!nextNode) {\n        nextNode = new Node(token, path, curr, 'dir');\n        curr.elements.push(nextNode);\n      }\n      curr = nextNode;\n      path += token + '/';\n    }\n\n    curr.elements.push(new Node(tokens[tokens.length - 1], file.path, curr, 'file', file.size, true));\n  }\n  return tree;\n};\n\nconst calculateTreeSizes = (tree: Node) => {\n  const size: number = tree.elements\n    .reduce((acc: number, curr: Node) => {\n      return acc + (curr.isLeaf ? curr.size : calculateTreeSizes(curr));\n    }, 0);\n  tree.size = size;\n  return size;\n};\n\nexport const buildTree = (name: string, files: GitHubFile[]) => {\n  const tree = deflattenTree(name, files);\n  calculateTreeSizes(tree);\n  return tree;\n};\n\nexport const partition = (node: Node): Node[] | null => {\n  if (node.isLeaf) {\n    throw Error(`Tried to partition a leaf node ${node.path} ${node.size}`);\n  }\n\n  // \"as equal in __size__ as possible\"\n  const buckets: Node[] = Array(2)\n    .fill(0)\n    .map(() => new Node('PARTITION OF ' + node.path, '', node, 'dirs', 0, false));\n\n  const obj = node.elements;\n\n  obj.sort((a, b) => b.size - a.size);\n  for (const node of obj) {\n    const minBucket: Node = buckets.find(\n      (c) => c.size === Math.min(...buckets.map((cc) => cc.size))\n    )!;\n    minBucket.elements.push(node)\n    minBucket.size += node.size;\n    minBucket.path = '';\n  }\n  return buckets;\n};\n","import { Branch } from \"../types/Branch\";\nimport { GitHubRepository, GitHubBranch, GitHubTreeNode, PossiblyTruncatedFiles } from \"./ApiTypes\";\n\nconst apiUrl = 'https://api.github.com';\n\nconst makeHeaders = (owner: string, token?: string) => {\n  if (!token) {\n    return {}\n  }\n  return {\n    headers: {\n      Authorization: \"Basic \" + btoa(`${owner}:${token}`),\n    },\n  }\n}\n\nconst processResponse = async <T>(response: Response, fn: (t: any) => T) => {\n  if (response.ok) {\n    return fn(await response.json());\n  } else {\n    const error = JSON.parse(await response.text());\n    throw Error(error.message);\n  }\n}\n\nexport const fetchRepos = async (owner: string, token?: string): Promise<string[]> => {\n  const url = `${apiUrl}/users/${owner}/repos?per_page=100`;\n  const response = await fetch(url, makeHeaders(owner, token));\n\n  return processResponse<string[]>(response, (json: any) => json.map((repo: GitHubRepository) => repo.name));\n};\n\nexport const fetchBranches = async (owner: string, token: string | undefined, repo: string): Promise<Branch[]> => {\n  const url = `${apiUrl}/repos/${owner}/${repo}/branches?per_page=100`\n  const response = await fetch(url, makeHeaders(owner, token));\n\n  return processResponse<Branch[]>(response, (json: any) => json.map((branch: GitHubBranch) => ({ name: branch.name, commitSha: branch.commit.sha })));\n};\n\nexport const fetchFiles = async (owner: string, token: string | undefined, repo: string, sha: string, ): Promise<PossiblyTruncatedFiles> => {\n  const url = `${apiUrl}/repos/${owner}/${repo}/git/trees/${sha}?recursive=true`;\n  const response = await fetch(url, makeHeaders(owner, token));\n\n  return processResponse<PossiblyTruncatedFiles>(response, (json: any) => {\n    const files = json.tree\n      .filter((node: GitHubTreeNode) => node.type === 'blob')\n      .map((node: GitHubTreeNode) => ({ path: node.path, size: node.size }));\n    return { files, truncated: json.truncated };\n  });\n};\n","export const actions = {\n  SET_OWNER_FORM_COLLAPSED: \"SET_OWNER_FORM_COLLAPSED\",\n  SET_OWNER: \"SET_OWNER\",\n  SET_TOKEN: \"SET_TOKEN\",\n  FETCH_REPOS: \"FETCH_REPOS\",\n  SET_REPOS: \"SET_REPOS\",\n\n  SET_REPO_FORM_COLLAPSED: \"SET_REPO_FORM_COLLAPSED\",\n  SET_REPO: \"SET_REPO\",\n  FETCH_BRANCHES: \"FETCH_BRANCHES\",\n  SET_BRANCHES: \"SET_BRANCHES\",\n\n  SET_BRANCH_FORM_COLLAPSED: \"SET_BRANCH_FORM_COLLAPSED\",\n  SET_BRANCH: \"SET_BRANCH\",\n  FETCH_FILES: \"FETCH_FILES\",\n  BUILD_TREE: \"BUILD_TREE\",\n\n  SET_RENDERER: \"SET_RENDERER\",\n  REDRAW: \"REDRAW\",\n  SET_HOVERED_NODE: \"SET_HOVERED_NODE\",\n  SET_MAIN_NODE: \"SET_MAIN_NODE\",\n};\n","import { actions } from \"./actions\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case actions.SET_OWNER_FORM_COLLAPSED:\n      {\n        const { collapsed } = action;\n        return {\n          ...state,\n          ownerData: {\n            ...state.ownerData,\n            collapsed,\n          }\n        }\n      }\n    case actions.SET_OWNER:\n      const { owner } = action;\n      return {\n        ...state,\n        ownerData: {\n          ...state.ownerData,\n          collapsed: false,\n          owner,\n        },\n      };\n    case actions.SET_TOKEN:\n      const { token } = action;\n      return {\n        ...state,\n        ownerData: {\n          ...state.ownerData,\n          token,\n        },\n      };\n    case actions.FETCH_REPOS:\n      return {\n        ...state,\n        ownerData: {\n          ...state.ownerData,\n          loading: true,\n        },\n        repoData: {\n          ...state.repoData,\n          repos: [],\n          repo: null,\n        },\n        branchData: {\n          ...state.branchData,\n          branches: [],\n          branch: null,\n        }\n      };\n    case actions.SET_REPOS: {\n      const { error, repos } = action;\n      return {\n        ...state,\n        ownerData: {\n          ...state.ownerData,\n          error,\n          loading: false,\n          collapsed: !error,\n        },\n        repoData: {\n          ...state.repoData,\n          repos,\n          collapsed: !!error,\n        },\n      };\n    }\n\n    case actions.SET_REPO_FORM_COLLAPSED:\n      {\n        const { collapsed } = action;\n        return {\n          ...state,\n          repoData: {\n            ...state.repoData,\n            collapsed,\n          }\n        }\n      }\n    case actions.SET_REPO:\n      const { repo } = action;\n      return {\n        ...state,\n        repoData: {\n          ...state.repoData,\n          repo,\n        },\n        treeData: {\n          ...state.treeData,\n          ...(repo !== state.repoData.repo ? { files: [] } : {}),\n        },\n      };\n    case actions.FETCH_BRANCHES:\n      return {\n        ...state,\n        repoData: {\n          ...state.repoData,\n          loading: true,\n          error: \"\",\n        },\n        branchData: {\n          ...state.branchData,\n          branches: [],\n          branch: null,\n        },\n      };\n    case actions.SET_BRANCHES: {\n      const { error, branches, branch } = action;\n      return {\n        ...state,\n        repoData: {\n          ...state.repoData,\n          error,\n          loading: false,\n          collapsed: !error,\n        },\n        branchData: {\n          ...state.branchData,\n          loading: false,\n          branches,\n          branch,\n          collapsed: !!error,\n        },\n      };\n    }\n\n    case actions.SET_BRANCH_FORM_COLLAPSED:\n      {\n      const { collapsed } = action;\n      return {\n        ...state,\n        branchData: {\n          ...state.branchData,\n          collapsed,\n        }\n      }\n    }\n    case actions.SET_BRANCH:\n      const { branch } = action;\n      return {\n        ...state,\n        branchData: {\n          ...state.branchData,\n          branch,\n        },\n      };\n    case actions.FETCH_FILES:\n      return {\n        ...state,\n        branchData: {\n          ...state.branchData,\n          loading: true,\n          error: \"\",\n        },\n        treeData: {\n          files: [],\n          tree: null,\n        },\n      };\n    case actions.BUILD_TREE:\n      const { tree, files, error, truncated } = action;\n      return {\n        ...state,\n        branchData: {\n          ...state.branchData,\n          loading: false,\n          error,\n          collapsed: !error && !truncated,\n        },\n        treeData: {\n          files,\n          tree,\n          truncated,\n          mainNode: tree,\n          hoveredNode: null,\n        },\n      };\n\n    case actions.SET_HOVERED_NODE:\n      const { hoveredNode } = action;\n      return {\n        ...state,\n        treeData: {\n          ...state.treeData,\n          hoveredNode,\n        },\n      };\n\n    case actions.SET_MAIN_NODE:\n      const { mainNode } = action;\n      return {\n        ...state,\n        treeData: {\n          ...state.treeData,\n          mainNode,\n        },\n      };\n    case actions.SET_RENDERER:\n      const { renderer } = action;\n      return {\n        ...state,\n        treeData: {\n          ...state.treeData,\n          renderer,\n        },\n      };\n\n    default:\n      console.warn(\"unhandled state: \", action);\n      return state;\n  }\n};\n","import React from \"react\";\n\nimport { Branch } from \"../types/Branch\";\nimport { Node } from \"../types/Node\";\n\nimport { readFromStorage, saveToStorage } from \"../domain/storage\";\nimport { buildTree } from \"../domain/fileTree\";\nimport { fetchRepos, fetchBranches, fetchFiles } from \"../api/api\";\nimport { TreeRenderer } from \"../domain/TreeRenderer\";\n\nimport { AppState } from \"./types\";\nimport { actions } from \"./actions\";\nimport { reducer } from \"./reducer\";\n\nconst OWNER_KEY = \"owner\";\nconst TOKEN_KEY = \"token\";\n\nconst initialState: AppState = {\n  ownerData: {\n    owner: readFromStorage(localStorage, OWNER_KEY) || \"\",\n    token: readFromStorage(sessionStorage, TOKEN_KEY) || \"\",\n    loading: false,\n    error: \"\",\n    collapsed: false,\n  },\n  repoData: {\n    repos: [],\n    repo: \"\",\n    error: \"\",\n    loading: false,\n    collapsed: true,\n  },\n  branchData: {\n    branches: [],\n    branch: null,\n    loading: false,\n    error: \"\",\n    collapsed: true,\n  },\n  treeData: {\n    files: [],\n    truncated: false,\n    tree: null,\n    hoveredNode: null,\n    renderer: null,\n  },\n};\n\nexport const GitreeContext = React.createContext<any>(null);\n\nexport const Provider = (a: any) => {\n  const children = a.children;\n  const [state, dispatch]: [AppState, any] = React.useReducer(\n    reducer,\n    initialState\n  );\n  const value = {\n    state,\n    setOwnerFormCollapsed: (collapsed: boolean) => {\n      dispatch({ type: actions.SET_OWNER_FORM_COLLAPSED, collapsed });\n    },\n    setOwner: (owner: string) => {\n      dispatch({ type: actions.SET_OWNER, owner });\n    },\n    setToken: (token: string) => {\n      dispatch({ type: actions.SET_TOKEN, token });\n    },\n    getRepos: async () => {\n      dispatch({ type: actions.FETCH_REPOS });\n      const { owner, token } = state.ownerData;\n      try {\n        const repos = await fetchRepos(owner, token);\n        if (!repos.length) {\n          dispatch({\n            type: actions.SET_REPOS,\n            error:\n              \"This user appears to have no repos. Why don't you try another one?\",\n            repos,\n          });\n        } else {\n          dispatch({ type: actions.SET_REPOS, error: \"\", repos });\n          saveToStorage(localStorage, OWNER_KEY, owner);\n          saveToStorage(sessionStorage, TOKEN_KEY, token);\n        }\n      } catch (e) {\n        dispatch({\n          type: actions.SET_REPOS,\n          error: `Can't fetch repos: ${e.message}.`,\n          repos: [],\n        });\n      }\n    },\n\n    setRepoFormCollapsed: (collapsed: boolean) => {\n      dispatch({ type: actions.SET_REPO_FORM_COLLAPSED, collapsed });\n    },\n    setRepo: (repo: string) => {\n      dispatch({ type: actions.SET_REPO, repo });\n    },\n    getBranches: async () => {\n      dispatch({ type: actions.FETCH_BRANCHES });\n      const { owner, token } = state.ownerData;\n      const { repo } = state.repoData;\n      try {\n        const branches = await fetchBranches(owner, token, repo);\n        if (!branches.length) {\n          dispatch({\n            type: actions.SET_BRANCHES,\n            error:\n              \"This repo appears to have no branches. Why don't you try another one?\",\n            branches,\n          });\n        } else {\n          const masterBranch = branches.find(\n            (b: Branch) => (b.name === \"master\" || b.name === \"main\")\n          );\n          dispatch({\n            type: actions.SET_BRANCHES,\n            error: \"\",\n            branches,\n            branch: masterBranch,\n          });\n        }\n      } catch (e) {\n        dispatch({\n          type: actions.SET_BRANCHES,\n          error: `Can't fetch branches: ${e.message}.`,\n          branches: [],\n        });\n      }\n    },\n\n    setBranchFormCollapsed: (collapsed: boolean) => {\n      dispatch({ type: actions.SET_BRANCH_FORM_COLLAPSED, collapsed });\n    },\n    setBranch: (branch: string) => {\n      dispatch({ type: actions.SET_BRANCH, branch });\n    },\n    buildTree: async () => {\n      dispatch({ type: actions.FETCH_FILES });\n      const { owner, token } = state.ownerData;\n      const { repo } = state.repoData;\n      const { branch } = state.branchData;\n      try {\n        const { files, truncated } = await fetchFiles(\n          owner,\n          token,\n          repo,\n          branch!.commitSha\n        );\n        dispatch({\n          type: actions.BUILD_TREE,\n          error: \"\",\n          files,\n          tree: buildTree(`${repo}@${branch!.name}`, files),\n          truncated,\n        });\n      } catch (e) {\n        dispatch({\n          type: actions.BUILD_TREE,\n          error: `Can't fetch files: ${e.message}.`,\n          files: [],\n          tree: null,\n        });\n      }\n    },\n\n    setRenderer: (renderer: TreeRenderer) => {\n      dispatch({ type: actions.SET_RENDERER, renderer });\n    },\n    setHoveredNode: (hoveredNode: Node) => {\n      dispatch({ type: actions.SET_HOVERED_NODE, hoveredNode });\n    },\n    setMainNode: (mainNode: Node) => {\n      dispatch({ type: actions.SET_MAIN_NODE, mainNode });\n    },\n    // it should be an action, but having all the state here, it's too enticing...\n    getUrl: (node: Node) => {\n      const owner = state.ownerData.owner;\n      const repo = state.repoData.repo;\n      const branch = state.branchData.branch;\n      if (!branch) return;\n      return `https://github.com/${owner}/${repo}/tree/${branch!.name}/${\n        node.dirPath\n      }`;\n    },\n  };\n\n  return (\n    <GitreeContext.Provider value={value}> {children} </GitreeContext.Provider>\n  );\n};\n","import { Node } from '../types/Node';\nimport { Path } from \"../types/Path\";\nimport { Vector2 } from \"../types/Vector2\";\nimport { Drawing } from './Drawing';\n\nexport type SelectionCallback = (node: Node | null) => void;\n\nexport class Selection {\n    private readonly callback: SelectionCallback;\n    private readonly drawing: Drawing;\n\n    constructor(drawing: Drawing, callback: SelectionCallback) {\n        this.callback = callback;\n        this.drawing = drawing;\n    }\n\n    hide() {\n        this.drawing.clear();\n        this.callback(null);\n    }\n\n    show(pathOver: Path) {\n        const { start, end, isMainPath, elem } = pathOver;\n\n        this.drawing.clear();\n\n        this.drawing.drawOutline(start, end);\n\n        if (isMainPath) {\n            this.tryDisplayText(elem.path, start, end);\n        }\n        this.callback(elem);\n    }\n\n    private tryDisplayText(text: string, start: Vector2, end: Vector2) {\n        const textLength = this.drawing.measureText(text).width;\n        if (end.x - start.x >= textLength) {\n            this.drawing.drawSelectionText(start, end, text);\n        }\n    }\n}\n","import { Colors } from \"../hooks/useColors\";\nimport { Vector2 } from \"../types/Vector2\";\n\nexport class Drawing {\n    private readonly minTextSize = 16;\n    private readonly textMargin = 1.2;\n    private readonly maxTextScale = 2;\n    private readonly rotationClamp = 1.3;\n    private readonly hasDarkTheme: boolean;\n    private readonly colors: Colors;\n\n    constructor(private ctx: CanvasRenderingContext2D, useDarkTheme: boolean, colors: Colors) {\n        this.ctx.textAlign = \"center\";\n        this.ctx.textBaseline = \"middle\";\n        this.hasDarkTheme = useDarkTheme;\n        this.colors = colors;\n    }\n\n    drawLine(from: Vector2, to: Vector2): void {\n        this.ctx.beginPath();\n        this.ctx.moveTo(from.x, from.y);\n        this.ctx.lineTo(to.x, to.y);\n        this.ctx.stroke();\n    }\n\n    measureText(text: string): TextMetrics {\n        return this.ctx.measureText(text);\n    }\n\n    drawSelectionText(start: Vector2, end: Vector2, text: string) {\n        this.fitText(start, end, text, '40px Arial', 'white', 1);\n    }\n\n    drawNodeText(start: Vector2, end: Vector2, text: string): void {\n        const color = this.hasDarkTheme ? '#FFFD' : 'black';\n        this.fitText(start, end, text, '10px Arial', color, this.maxTextScale);\n    }\n\n    drawRectPath(start: Vector2, end: Vector2): Path2D {\n        const shape = new Path2D();\n\n        this.ctx.beginPath();\n        this.ctx.fillStyle = 'transparent';\n        shape.rect(start.x, start.y, end.x - start.x, end.y - start.y);\n        this.ctx.fill(shape);\n\n        return shape;\n    }\n\n    drawOutline(start: Vector2, end: Vector2) {\n        this.ctx.strokeStyle = \"white\";\n        this.ctx.lineWidth = 5;\n        const size = end.sub(start);\n        this.ctx.strokeRect(start.x, start.y, size.x, size.y);\n    }\n\n    fillArea(start: Vector2, end: Vector2, color: string): void {\n        const size = end.sub(start);\n\n        this.ctx.fillStyle = color;\n        this.ctx.strokeStyle = this.hasDarkTheme ? this.colors.actionDark : 'black';\n        this.ctx.fillRect(start.x, start.y, size.x, size.y)\n    }\n\n    clear() {\n        const canvas = this.ctx.canvas;\n        this.ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n\n    private fitText(start: Vector2, end: Vector2, text: string, font: string, color: string, maxScale: number) {\n        this.ctx.font = font;\n        const bounds = end.sub(start);\n        if (bounds.x < this.minTextSize || bounds.y < this.minTextSize) {\n            return;\n        }\n\n        const width = this.measureText(text).width * this.textMargin;\n        let rotation = 0;\n        let scale = 1;\n        if (bounds.x < width) {\n            if (bounds.y < width) {\n                const diagonalWidth = bounds.length;\n                if (diagonalWidth < width) {\n                    return;\n                }\n                scale = Math.min(diagonalWidth / width, maxScale);\n            }\n            else {\n                scale = Math.min(bounds.y / width, maxScale);\n            }\n            rotation = Math.atan2(bounds.y, bounds.x);\n            if (rotation > this.rotationClamp) {\n                rotation = Math.PI / 2;\n            }\n        }\n        else {\n            scale = Math.min(bounds.x / width, maxScale);\n        }\n        const pos = start.lerp(end, 0.5);\n\n        this.ctx.save();\n\n        this.ctx.fillStyle = color;\n        this.ctx.translate(pos.x, pos.y);\n        this.ctx.rotate(rotation);\n        this.ctx.scale(scale, scale);\n        this.ctx.fillText(text, 0, 0);\n        this.ctx.restore();\n    }\n}","export class Vector2 {\n    static get zero(): Vector2 {\n        return new Vector2(0, 0);\n    }\n\n    get length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    constructor(public x: number, public y: number) { }\n\n    add(other: Vector2): Vector2 {\n        return new Vector2(this.x + other.x, this.y + other.y);\n    }\n\n    sub(other: Vector2): Vector2 {\n        return new Vector2(this.x - other.x, this.y - other.y);\n    }\n\n    mul(val: number) {\n        return new Vector2(this.x * val, this.y * val);\n    }\n\n    lerp(other: Vector2, amount: number): Vector2 {\n        return this.add(other.sub(this).mul(amount));\n    }\n}","import { Node } from \"./Node\";\nimport { Vector2 } from \"./Vector2\";\n\nexport class Path {\n    shape: Path2D;\n    elem: Node;\n    start: Vector2;\n    end: Vector2;\n    isMainPath: boolean;\n\n    constructor(shape: Path2D, elem: Node, start: Vector2, end: Vector2, isMainPath: boolean) {\n        this.shape = shape;\n        this.elem = elem;\n        this.start = start;\n        this.end = end;\n        this.isMainPath = isMainPath;\n    }\n}\n","export function lerp(from: number, to: number, amount: number): number {\n  return from + (to - from) * amount;\n}\n","import { Selection, SelectionCallback } from './selection';\nimport { Drawing } from './Drawing';\n\nimport { Vector2 } from '../types/Vector2';\nimport { Node } from \"../types/Node\";\nimport { Path } from '../types/Path';\n\nimport { partition } from './fileTree';\nimport { lerp } from './util';\nimport { Colors } from '../hooks/useColors';\n\nexport class TreeRenderer {\n    private canvas: HTMLCanvasElement;\n    private linkRef: HTMLAnchorElement;\n    private selection: Selection;\n    private drawing: Drawing;\n    private currentNode: Node | null;\n\n    private allPaths: Path[] = [];\n    private firstLevelPaths: Path[] = [];\n    private subdivPaths: Path[] = [];\n    private currentPath: Path | null = null;\n\n    private readonly maxLevels = 25;\n    private setCurrentNode: SelectionCallback;\n\n    constructor(canvas: HTMLCanvasElement,\n        frontCanvas: HTMLCanvasElement,\n        linkRef: HTMLAnchorElement,\n        hoverCallback: SelectionCallback,\n        currentNodeCallback: SelectionCallback,\n        useDarkTheme: boolean,\n        colors: Colors) {\n        const selectionDrawing = new Drawing(frontCanvas.getContext('2d')!, useDarkTheme, colors);\n\n        this.canvas = canvas;\n        this.linkRef = linkRef;\n        this.selection = new Selection(selectionDrawing, hoverCallback);\n        this.drawing = new Drawing(this.canvas.getContext('2d')!, useDarkTheme, colors);\n\n        this.currentNode = null;\n        this.setCurrentNode = currentNodeCallback;\n    }\n\n    private getPathOverType(e: any): Path[] {\n        if (e.shiftKey) {\n            if (e.ctrlKey) {\n                return this.subdivPaths;\n            } else {\n                return this.allPaths;\n            }\n        } else {\n            return this.firstLevelPaths;\n        }\n    }\n\n    mouseMove(e: any) {\n        const paths = this.getPathOverType(e);\n        const pathOver = this.findPathOver(e, paths);\n        if (this.currentPath !== pathOver) {\n            this.currentPath = pathOver;\n            if (pathOver === null) {\n                this.selection.hide();\n            } else {\n                this.selection.show(pathOver);\n            }\n        }\n    }\n\n    click(e: MouseEvent) {\n        e.preventDefault(); // stop selecting sorrounding texts\n        if (this.currentPath === null) return;\n        this.draw(this.currentPath.elem);\n    }\n\n    hideSelection() {\n        this.selection.hide();\n        this.currentPath = null;\n    }\n\n    draw(node: Node) {\n        if (this.currentNode === node) return;\n\n        this.currentNode = node;\n        this.setCurrentNode(node);\n\n        this.selection.hide();\n\n        this.allPaths = [];\n        this.firstLevelPaths = [];\n        this.subdivPaths = [];\n        this.drawing.clear();\n\n        node.firstFlag = false;\n        for (const e of node.elements) {\n            e.firstFlag = true;\n        }\n\n        const canvasSize = new Vector2(this.canvas.width, this.canvas.height);\n        this.drawSegment(node, Vector2.zero, canvasSize, 0);\n    }\n\n    private drawSegment(node: Node, startPoint: Vector2, endPoint: Vector2, depth: number) {\n        if (++depth > this.maxLevels) return;\n\n        node = node.skipSingleDirs();\n\n        if (node.isLeaf) {\n            this.drawing.drawNodeText(startPoint, endPoint, node.path);\n            if (depth !== 1) {\n                this.linkRef.style.display = `none`;\n                const shape = this.drawing.drawRectPath(startPoint, endPoint);\n                this.allPaths.push(new Path(shape, node, startPoint, endPoint, false));\n            } else {\n                const text = node.path;\n                const size = this.drawing.measureText(text);\n                const x = lerp(0, this.canvas.width, 0.5) + size.width;\n                const y = lerp(0, this.canvas.height, 0.5);\n                this.linkRef.style.display = `inline`;\n                this.linkRef.style.left = `${x + 8}px`;\n                this.linkRef.style.top = `${y - 14}px`;\n            }\n            return;\n        }\n\n        if (node.firstFlag) {\n            const shape = this.drawing.drawRectPath(startPoint, endPoint);\n            this.firstLevelPaths.push(new Path(shape, node, startPoint, endPoint, true));\n        }\n\n        const parts: Node[] = partition(node)!;\n\n        const ratio = this.calculatePartsRatio(parts);\n\n        let firstEnd: Vector2, secondStart: Vector2;\n        if (endPoint.x - startPoint.x > endPoint.y - startPoint.y) {\n            const divPointX = lerp(startPoint.x, endPoint.x, ratio);\n            firstEnd = new Vector2(divPointX, endPoint.y);\n            secondStart = new Vector2(divPointX, startPoint.y);\n        } else {\n            const divPointY = lerp(startPoint.y, endPoint.y, ratio);\n            firstEnd = new Vector2(endPoint.x, divPointY);\n            secondStart = new Vector2(startPoint.x, divPointY);\n        }\n        this.drawing.drawLine(firstEnd, secondStart);\n\n        // add main paths on first level\n        if (depth === 1) {\n            if (!parts[0].isLeaf) {\n                const first = this.drawing.drawRectPath(startPoint, firstEnd);\n                this.subdivPaths.push(new Path(first, parts[0], startPoint, firstEnd, true));\n            }\n            if (!parts[1].isLeaf) {\n                const second = this.drawing.drawRectPath(secondStart, endPoint);\n                this.subdivPaths.push(new Path(second, parts[1], secondStart, endPoint, true));\n            }\n        }\n\n        const color = `rgba(0, 0, 63, ${0.15 / depth})`;\n        this.drawing.fillArea(startPoint, firstEnd, color);\n        this.drawing.fillArea(secondStart, endPoint, color);\n\n        this.drawSegment(parts[0], startPoint, firstEnd, depth);\n        this.drawSegment(parts[1], secondStart, endPoint, depth);\n    };\n\n    private calculatePartsRatio(parts: Node[]) {\n        console.assert(parts.length === 2);\n        const ratio = parts[0].size / (parts[0].size + parts[1].size);\n        if (ratio > 0.9) return 0.9;\n        if (ratio < 0.1) return 0.1;\n        return ratio;\n    }\n\n    private findPathOver(e: any, paths: Path[]): Path | null {\n        const { offsetX: x, offsetY: y } = e.nativeEvent;\n        const ctx = this.canvas.getContext('2d')!;\n        const pp = (path: Path) => ctx.isPointInPath(path.shape, x, y);\n        return paths.find(pp) || null;\n    }\n}\n","import React from \"react\";\n\nimport { GitreeContext } from \"../../state\";\nimport { Node } from \"../../types/Node\";\nimport \"./TreePath.scss\";\n\nexport function TreePath() {\n  const {\n    state: {\n      treeData: { mainNode },\n    },\n    setMainNode,\n  } = React.useContext(GitreeContext);\n\n  const createPath = (node: Node): Node[] => {\n    const pathSegments: Node[] = [];\n    let currentNode: Node | null = node;\n    do {\n      pathSegments.unshift(currentNode);\n      currentNode = currentNode.parent;\n    } while (currentNode !== null);\n    return pathSegments;\n  };\n\n  if (!mainNode) {\n    return null;\n  }\n\n  const path = createPath(mainNode);\n\n  return (\n    <div className=\"tree-path\">\n      {path.map((node) => (\n        <button\n          className=\"link\"\n          key={`${node.dirPath}/${node.path}`}\n          onClick={() => setMainNode(node)}\n        >\n          {node.path}\n        </button>\n      ))}\n      <p>Tip: Press SHIFT to select individual files.</p>\n    </div>\n  );\n}\n","export default function useHasDarkTheme() {\n    return matchMedia('(prefers-color-scheme: dark)').matches;\n}","import useHasDarkTheme from \"./useHasDarkTheme\";\n\nexport interface Colors {\n    actionDark: string;\n    actionLight: string;\n    action: string;\n}\n\nexport default function useColors(): Colors {\n    const style = window.getComputedStyle(document.documentElement);\n    const hasDarkTheme = useHasDarkTheme();\n\n    const actionDark = style.getPropertyValue(\"--action-dark\");\n    const actionLight = style.getPropertyValue(\"--action\");\n\n    return {\n        actionDark,\n        actionLight,\n        action: hasDarkTheme ? actionDark : actionLight,\n    };\n}","import React from \"react\";\n\nimport { GitreeContext } from \"../../state\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport useColors from \"../../hooks/useColors\";\n\ninterface NodeLinkProps {\n  node: React.ReactNode;\n  _ref?: any\n}\n\nexport function NodeLink({ node, _ref }: NodeLinkProps) {\n  const { getUrl } = React.useContext(GitreeContext);\n  const {action} = useColors();\n\n  return (\n    <a\n      href={getUrl(node)}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      aria-label=\"Open on GitHub\"\n      ref={_ref}\n    >\n      <FontAwesomeIcon color={action} icon={faExternalLinkAlt} />\n    </a>\n  );\n}\n","import React, { CSSProperties } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { GitreeContext } from \"../../state\";\nimport useColors from \"../../hooks/useColors\";\n\nconst owners = [\n  \"kubernetes\",\n  \"apache\",\n  \"rust-lang\",\n  \"dotnet\",\n  \"nodejs\",\n  \"tensorflow\",\n  \"wordpress\",\n  \"facebook\",\n  \"gatsbyjs\",\n  \"angular\",\n  \"kyma-project\",\n];\n\nconst style = {\n  margin: 0,\n  padding: 0,\n  width: \"unset\",\n} as CSSProperties;\n\nexport function RandomOwnerButton() {\n  const { action } = useColors();\n  const { state, setOwner } = React.useContext(GitreeContext);\n  const { owner } = state.ownerData;\n\n  const setRandomOwner = (e: any) => {\n    e.preventDefault();\n    let nextOwner;\n    do {\n      nextOwner = owners[Math.floor(Math.random() * owners.length)];\n    } while (owner === nextOwner);\n    setOwner(nextOwner);\n  };\n\n  return (\n    <button style={style} type=\"button\" className=\"link\" onClick={setRandomOwner}>\n      <FontAwesomeIcon icon={faDice} color={action} />\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport './HelpBanner.scss';\nimport { RandomOwnerButton } from \"../form/RandomOwnerButton\";\n\nexport function HelpBanner() {\n  return (\n    <div className=\"help-banner\">\n      <h1>Hi!</h1>\n      <p>\n        This is\n        <span role=\"img\" aria-label=\"\">\n          {\" \"}\n          🌳{\" \"}\n        </span>\n        Gitree.\n      </p>\n      <p>You can map a GitHub repository like in WinDirStat or SpaceSniffer.</p>\n      <p>\n        Please set a GitHub username or organisation name on the right panel, then follow the steps!\n      </p>\n      <p>\n        You can always press the <RandomOwnerButton /> to choose a popular random repo.\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { GitreeContext } from \"../../state\";\nimport { TreeRenderer } from \"../../domain/TreeRenderer\";\nimport { TreePath } from \"./TreePath\";\nimport \"./TreeView.scss\";\nimport { NodeLink } from \"./NodeLink\";\nimport { HelpBanner } from \"./HelpBanner\";\nimport useHasDarkTheme from \"../../hooks/useHasDarkTheme\";\nimport useColors from \"../../hooks/useColors\";\n\ninterface TreeViewProps {\n  width: number;\n  height: number;\n}\n\nexport function TreeView({ width, height }: TreeViewProps) {\n  const { state, setHoveredNode, setMainNode, setRenderer } = React.useContext(\n    GitreeContext\n  );\n  const isDarkTheme = useHasDarkTheme();\n  const colors = useColors();\n\n  const { loading } = state.branchData;\n  const { tree, mainNode, renderer } = state.treeData;\n\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const frontCanvasRef = React.useRef<HTMLCanvasElement>(null);\n  const linkRef = React.useRef<HTMLAnchorElement>(null);\n\n  React.useEffect(() => {\n    if (tree && canvasRef.current) {\n      setRenderer(\n        new TreeRenderer(\n          canvasRef.current,\n          frontCanvasRef.current!,\n          linkRef.current!,\n          setHoveredNode,\n          setMainNode,\n          isDarkTheme,\n          colors\n        )\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [canvasRef, tree]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(() => renderer?.draw(mainNode), [mainNode, renderer]);\n  \n  return (\n    <>\n      <div className=\"tree-view-container\">\n        {!mainNode && !loading && <HelpBanner />}\n        {mainNode && <NodeLink node={mainNode} _ref={linkRef} />}\n        <canvas ref={frontCanvasRef} width={width} height={height}></canvas>\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={height}\n          onMouseLeave={() => renderer?.hideSelection()}\n          onClick={(e) => renderer?.click(e)}\n          onMouseMove={(e) => renderer?.mouseMove(e)}\n        ></canvas>\n      </div>\n      <TreePath />\n    </>\n  );\n}\n","import React from \"react\";\nimport useHasDarkTheme from './../../hooks/useHasDarkTheme';\n\nimport {\n  faCheck,\n  faTimes,\n  faHourglass,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\nexport type PanelBadgeType = \"OK\" | \"Error\" | \"Loading\" | \"None\";\n\ninterface PanelBadgeProps {\n  type: PanelBadgeType;\n}\n\nexport function PanelBadge({ type }: PanelBadgeProps) {\n  const isDarkTheme = useHasDarkTheme();\n\n  if (type === \"None\") {\n    return null;\n  }\n\n  let color: string = \"\";\n  let icon: IconProp | null = null;\n  switch (type) {\n    case \"OK\":\n      color = \"green\";\n      icon = faCheck;\n      break;\n    case \"Error\":\n      color = \"red\";\n      icon = faTimes;\n      break;\n    case \"Loading\":\n      color = isDarkTheme ? \"orange\" : \"black\";\n      icon = faHourglass;\n      break;\n    default:\n      throw Error(`Unrecognized badge ${type}.`);\n  }\n\n  return <FontAwesomeIcon style={{ color }} icon={icon!} />;\n}\n","import React from \"react\";\n\nimport { PanelBadge, PanelBadgeType } from \"./PanelBadge\";\nimport \"./CollapsiblePanel.scss\";\n\ninterface CollapsiblePanelProps {\n  collapsed: boolean;\n  setCollapsed: (collapsed: boolean) => void;\n  title: string;\n  children: React.ReactNode;\n  type: PanelBadgeType;\n}\n\nexport function CollapsiblePanel(props: CollapsiblePanelProps) {\n  const { collapsed, setCollapsed, title, type, children } = props;\n\n  return (\n    <div className=\"collapsible-panel\">\n      <h4 className=\"title\" onClick={() => setCollapsed(!collapsed)}>\n        {title}\n        <PanelBadge type={type} />\n      </h4>\n      <div className={collapsed ? \"content collapsed\" : \"content expanded\"}>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { CollapsiblePanel } from \"../view/CollapsiblePanel\";\nimport { PanelBadgeType } from '../view/PanelBadge';\n\nexport interface FormPanelProps {\n  title: string;\n  isOk: boolean;\n  collapsed: boolean;\n  setCollapsed: (collapsed: boolean) => void;\n  loading: boolean;\n  error: string;\n  children: React.ReactNode;\n}\n\nexport function FormPanel(props: FormPanelProps) {\n  const { title, isOk, collapsed, setCollapsed, loading, error, children } = props;\n  let type: PanelBadgeType;\n  if (error) {\n    type = \"Error\";\n  } else if (loading) {\n    type = \"Loading\";\n  } else if (isOk) {\n    type = \"OK\";\n  } else {\n    type = \"None\";\n  }\n\n  return (\n    <CollapsiblePanel\n      collapsed={collapsed}\n      setCollapsed={setCollapsed}\n      type={type}\n      title={title}\n    >\n      {children}\n      {error && <p className=\"error\">{error}</p>}\n    </CollapsiblePanel>\n  );\n}\n","import React from \"react\";\nimport { GitreeContext } from \"../../state\";\nimport { FormPanel } from \"./FormPanel\";\nimport { RandomOwnerButton } from \"./RandomOwnerButton\";\n\nexport function OwnerDataForm() {\n  const { state, setOwner, setOwnerFormCollapsed, setToken, getRepos } = React.useContext(\n    GitreeContext\n  );\n  const { owner, token, loading, collapsed, error } = state.ownerData;\n  const { repos } = state.repoData;\n\n  const form = (\n    <section>\n      <label>\n        User/organisation <RandomOwnerButton />\n        <input\n          required\n          type=\"text\"\n          value={owner}\n          onChange={(e) => setOwner(e.target.value)}\n        />\n      </label>\n      <label>\n        GitHub token (optional)\n        <input\n          type=\"password\"\n          value={token}\n          onChange={(e) => setToken(e.target.value)}\n        />\n      </label>\n      <button type=\"button\" disabled={!owner} onClick={getRepos}>\n        Get repos\n      </button>\n    </section>\n  );\n\n  return (\n    <FormPanel\n      collapsed={collapsed}\n      setCollapsed={setOwnerFormCollapsed}\n      loading={loading}\n      error={error}\n      isOk={repos && repos.length}\n      title=\"Owner data\"\n    >\n      {form}\n    </FormPanel>\n  );\n}\n","import React from \"react\";\nimport { GitreeContext } from \"../../state\";\nimport { FormPanel } from \"./FormPanel\";\n\nexport function RepoForm() {\n  const {\n    state,\n    setRepo,\n    setRepoFormCollapsed,\n    getBranches,\n  } = React.useContext(GitreeContext);\n  const { repos, repo, loading, collapsed, error } = state.repoData;\n  const { branches } = state.branchData;\n\n  const form = (\n    <section>\n      <label>\n        Choose repo:\n        <select\n          disabled={!repos}\n          value={repo || \".none\"}\n          onChange={(e) => setRepo(e.target.value)}\n        >\n          <option value=\".none\" disabled hidden>\n            Select repo\n          </option>\n          {repos &&\n            repos.map((r: string) => (\n              <option key={r} value={r}>\n                {r}\n              </option>\n            ))}\n        </select>\n      </label>\n      <button type=\"button\" disabled={!repo} onClick={getBranches}>\n        Get branches\n      </button>\n    </section>\n  );\n\n  return (\n    <FormPanel\n      collapsed={collapsed}\n      setCollapsed={setRepoFormCollapsed}\n      loading={loading}\n      error={error}\n      isOk={branches && branches.length}\n      title=\"Repository\"\n    >\n      {form}\n    </FormPanel>\n  );\n}\n","import React from \"react\";\nimport { Branch } from \"../../types/Branch\";\nimport { GitreeContext } from \"../../state\";\nimport { FormPanel } from \"./FormPanel\";\n\nexport function BranchForm() {\n  const { state, setBranch, setBranchFormCollapsed, buildTree } = React.useContext(GitreeContext);\n  const { branches, branch, loading, collapsed, error } = state.branchData;\n  const { files, truncated } = state.treeData;\n  const form = (\n    <>\n      <section>\n        <label>\n          Choose branch:\n          <select\n            disabled={!branches}\n            value={branch ? branch.name : \".none\"}\n            onChange={(e) =>\n              setBranch(\n                branches!.find((b: Branch) => b.name === e.target.value)!\n              )\n            }\n          >\n            <option value=\".none\" disabled hidden>\n              Select branch\n            </option>\n            {branches &&\n              branches.map((b: Branch) => (\n                <option key={b.commitSha} value={b.name}>\n                  {b.name}\n                </option>\n              ))}\n          </select>\n        </label>\n        <button type=\"button\" disabled={!branch} onClick={buildTree}>\n          Build tree\n        </button>\n      </section>\n      {truncated && (\n        <p>\n          It looks like GitHub API response is truncated. Provide your API token\n          to fetch all the data.\n        </p>\n      )}\n    </>\n  );\n\n  return (\n    <FormPanel\n      collapsed={collapsed}\n      setCollapsed={setBranchFormCollapsed}\n      loading={loading}\n      error={error}\n      isOk={files && files.length}\n      title=\"Branch\"\n    >\n      {form}\n    </FormPanel>\n  );\n}\n","import React from \"react\";\n\nimport filesize from \"filesize\";\nimport { Node } from \"../../types/Node\";\n\nimport { faFile, faFolder } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { NodeLink } from \"./NodeLink\";\nimport \"./NodePanel.scss\";\nimport useColors from \"../../hooks/useColors\";\n\ninterface NodePanelProps {\n  node: Node;\n  showLink?: boolean;\n}\n\nexport function NodePanel({ node, showLink }: NodePanelProps) {\n  const { action: actionColor } = useColors();\n\n  if (!node) return null;\n\n  const icon = node.type === \"file\" ? faFile : faFolder;\n\n  return (\n    <section className=\"node-panel\">\n      <h5>\n        <FontAwesomeIcon color={actionColor} icon={icon} />\n        Name: {node.path}\n        {showLink && <NodeLink node={node} />}\n      </h5>\n      <p>Size: {filesize(node.size)}</p>\n    </section>\n  );\n}\n","import React from \"react\";\n\nimport { GitreeContext } from \"../../state\";\nimport { NodePanel } from './NodePanel';\nimport './TreePanel.scss';\n\nexport function TreePanel() {\n  const { state, setMainNode } = React.useContext(GitreeContext);\n  const { tree, mainNode, hoveredNode } = state.treeData;\n\n  return (\n    <div className=\"tree-panel\">\n      <section className=\"controls\">\n        <button disabled={!tree} onClick={() => setMainNode(tree)}>\n          Reset\n        </button>\n        <button\n          disabled={!tree || !mainNode.parent}\n          onClick={() => setMainNode(mainNode.parent)}\n        >\n          Navigate up\n        </button>\n      </section>\n      <NodePanel node={mainNode} showLink={true} />\n      <NodePanel node={hoveredNode} />\n    </div>\n  );\n}\n","import React from \"react\";\n\n// import { faHamburger } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Sidebar.scss\";\n\ninterface SidebarProps {\n  children: React.ReactNode;\n}\n\nexport function Sidebar({ children }: SidebarProps) {\n  // const [isSidebarCollapsed, setSidebarCollapsed] = React.useState(false);\n\n  // const className = isSidebarCollapsed\n  //   ? \"sidebar collapsed\"\n  //   : \"sidebar expanded\";\n\n  return (\n    // <aside className={className}>\n    <aside className=\"sidebar expanded\">\n      {/* <button\n        onClick={() => setSidebarCollapsed(!isSidebarCollapsed)}\n        aria-label=\"expand/collapse\"\n      >\n        <FontAwesomeIcon icon={faHamburger} />\n      </button> */}\n      {children}\n    </aside>\n  );\n}\n","import React from \"react\";\n\nimport { Provider } from \"../state\";\n\nimport { TreeView } from \"./tree/TreeView\";\nimport { OwnerDataForm } from \"./form/OwnerDataForm\";\nimport { RepoForm } from \"./form/RepoForm\";\nimport { BranchForm } from \"./form/BranchForm\";\nimport { TreePanel } from \"./tree/TreePanel\";\nimport { Sidebar } from \"./view/Sidebar\";\n\nexport default function App() {\n  return (\n    <Provider>\n      <TreeView width={960} height={640} />\n      <Sidebar>\n        <form>\n          <OwnerDataForm />\n          <RepoForm />\n          <BranchForm />\n        </form>\n        <TreePanel />\n      </Sidebar>\n    </Provider>\n  );\n}\n","import React from 'react';\n//@ts-ignore\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport '@vladocar/basic.css/css/basic.css';\nimport './style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}